{"version":3,"file":"type.js","names":["byte"],"sources":["../src/type.ts"],"sourcesContent":["import { AnyCodec } from \"@ckb-lumos/codec/lib/base\";\n\nexport const byte = \"byte\";\n\nexport type BaseType = {\n  name: string;\n  item: string;\n};\n\nexport type Field = {\n  name: string;\n  type: string;\n};\n\nexport type Array = {\n  type: \"array\";\n  item_count: number;\n} & BaseType;\n\nexport type Vector = {\n  type: \"vector\";\n} & BaseType;\n\nexport type Option = {\n  type: \"option\";\n} & BaseType;\n\nexport type Union = {\n  type: \"union\";\n  name: string;\n  items: string[];\n};\n\nexport type Struct = {\n  type: \"struct\";\n  name: string;\n  fields: Field[];\n};\n\nexport type Table = {\n  type: \"table\";\n  name: string;\n  fields: Field[];\n};\n\n// mol types\nexport type MolType = Array | Vector | Option | Union | Struct | Table;\n\n// key is type name\nexport type MolTypeMap = Map<string, MolType>;\n\n// key is type name\nexport type CodecMap = Map<string, AnyCodec>;\n\nexport interface Parser {\n  parse(data: string): MolType[];\n}\n"],"mappings":";;;;;;AAEO,MAAMA,IAAI,GAAG,MAAb"}