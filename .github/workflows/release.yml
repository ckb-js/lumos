name: Release
on:
  push:
    branches: [develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  statuses: write
  checks: write
  issues: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: exit 0
  # TODO uncomment me when ready
  #  test:
  #    name: Verify
  #    secrets: inherit
  #    uses: ./.github/workflows/ci.yml

  release:
    name: Release
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install dependencies
        uses: ./.github/actions/install-deps

      # TODO remove me when ready
      - name: Release to Verdaccio
        run: |
          npm install -g verdaccio
          npm config set registry http://localhost:4873
          npm config set //localhost:4873/:_authToken fake
          nohup verdaccio --config ./devtools/verdaccio.yaml --listen=4873 >/dev/null 2>&1 &

      - name: Publish to NPM
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm changeset:version
          publish: pnpm changeset:release
          createGithubReleases: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - uses: 8BitJonny/gh-get-current-pr@2.2.0
        id: PR

      # TODO remove me when ready, just for debugging
      - name: Debug
        run: |
          echo "pr_found: ${{ steps.PR.outputs.pr_found }}"
          echo "pr_found_is_true: ${{ steps.PR.outputs.pr_found == 'true' }}"
          echo "pr_merged_at: ${{ steps.PR.outputs.pr_merged_at }}"
          echo "pr_merged_at_contains_dash: ${{ contains(steps.PR.outputs.pr_merged_at, '-') }}"
          echo "pr_title: ${{ steps.PR.outputs.pr_title }}"
          echo "pr_title_contains_version_packages: ${{ contains(steps.PR.outputs.pr_title, 'Version Packages') }}"
          echo "changesets outputs: ${{ steps.changesets.outputs.published }}"

      - name: Set publish env
        run: |
          CURRENT_VERSION=$(node -p 'require("./packages/lumos/package.json").version')
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> "$GITHUB_ENV"
          PRERELEASE=$(node -p 'require("./packages/lumos/package.json").version.includes("-")')
          echo "PRERELEASE=${PRERELEASE}" >> "$GITHUB_ENV"
          echo "SHOULD_PUBLISH=${{ steps.PR.outputs.pr_found == 'true' &&
            contains(steps.PR.outputs.pr_merged_at, '-') &&
            contains(steps.PR.outputs.pr_title, 'Version Packages') }}" >> "$GITHUB_ENV"

      - name: Changelog
        if: ${{ env.SHOULD_PUBLISH == 'true' }}
        id: changelog
        uses: ashley-taylor/regex-property-action@v1.3
        with:
          value: ${{ steps.PR.outputs.pr_body }}
          regex: "([\\s\\S]*)(# Releases)"
          replacement: "$2"

      - uses: ncipollo/release-action@v1
        if: ${{ env.SHOULD_PUBLISH == 'true' }}
        with:
          tag: v${{ env.CURRENT_VERSION }}
          prerelease: ${{ env.PRERELEASE == 'true' && 'true' || 'false' }}
          body: ${{ steps.changelog.outputs.value }}
